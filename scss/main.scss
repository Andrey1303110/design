*,
*::before,
*::after {
  box-sizing: border-box;
}

ul[class],
ol[class] {
  padding: 0;
}

body,
h1,
h2,
h3,
h4,
p,
ul[class],
ol[class],
li,
figure,
figcaption,
blockquote,
dl,
dd {
  margin: 0;
}

body {
  min-height: 100vh;
  scroll-behavior: smooth;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

ul[class],
ol[class] {
  list-style: none;
}

a:not([class]) {
  text-decoration-skip-ink: auto;
}

img {
  max-width: 100%;
  display: block;
}

article > * + * {
  margin-top: 1em;
}

input,
button,
textarea,
select {
  font: inherit;
}

@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

@import "../scss/fonts.scss";

.rating {
    width: 125px;
    height: 25px;
  }
  .rating input[type="radio"] {
    display: none;
  }
  .label_rating {
    float: right;
    display: block;
    width: 25px;
    height: 25px;
    background: url(../img/rating.png) round;
    cursor: pointer;
  }
  /*Пишем правила смены положения background-а*/
  .rating .label_rating:hover, /*Правило для ховера на текущий лейбл*/
  .rating .label_rating:hover ~ .label_rating, /*Правило для всех следующих лейблов по DOM дереву*/
  .rating input[type="radio"]:checked ~ .label_rating /*Правило для всех следующих лейблов после выбранного инпута, чтобы звездочки как бы зафиксировались*/
  {
    background-color: white;
  }


